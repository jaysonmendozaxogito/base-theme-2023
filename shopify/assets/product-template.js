import{d as c,g as d,h as s,r as u,i as g,A as m,B as p}from"./utilities.js";const C=c({id:"product",state:()=>({isLoading:!1,error:null,media:[],activeColor:null}),getters:{isProductInCart(){},getImagesPerColor(){const e=this.media.filter(t=>(console.log("<<<<image.alt:",t.alt,this.activeColor),t.alt.includes(this.activeColor)));return console.log("imagesThatContainsCurrentColorOnAltValue:",e),e}},actions:{setActiveColor(e){this.activeColor=e},setAllProductMedia(e){this.media=e},async fetchProductMedia(e){if(!!e){this.isLoading=!0;try{const t=await d(`/products/${e}.js`,"GET",null,null),r=t.data;console.log("response:",t);const a=r.media;this.media=a,this.isLoading=!1}catch(t){this.error=t,this.isLoading=!1}}}}}),f=C,h=s({name:"product-gallery",props:{media:{type:Array,default:()=>[]},activeColor:{type:String,default:""}},setup(e,{slots:t}){const r=u({});console.log("props.activeColor:",e);const a=f();a.setActiveColor(e.activeColor);const n=l=>{l.forEach(o=>{if(o.media_type==="image"){const i=new Image;i.src=o.src,i.onload=()=>{r.value[o.id]=o.src}}else o.media_type==="video"||o.media_type})};return g(()=>{n(e.media),a.setAllProductMedia(e.media)}),()=>t.default({loadedImages:r.value,getImagesPerColor:a.getImagesPerColor})}});document.addEventListener("DOMContentLoaded",()=>{const e=m(),t=p(s({components:{ProductGallery:h},data(){return{remainingMedia:window.remainingMedia||[]}}}));t.use(e),t.mount("#product-app")});
